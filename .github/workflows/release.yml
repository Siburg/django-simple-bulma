name: Release to PyPI

on:
  release:
    types: [published]

jobs:
  check-submodules:
    name: Check submodules
    uses: ./.github/workflows/check-submodules.yml

  bump-version:
    name: Bump version in repository
    runs-on: ubuntu-latest
    needs: check-submodules
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: main

    - name: Install UV
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Set up Python
      run: uv python install 3.12

    - name: Get version from release tag
      id: get_version
      run: |
        # Remove 'v' prefix if present from the release tag
        VERSION=${{ github.event.release.tag_name }}
        VERSION=${VERSION#v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Release version: $VERSION"

    - name: Update version in pyproject.toml
      run: |
        uv version ${{ steps.get_version.outputs.VERSION }}

    - name: Commit version bump
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        file_pattern: pyproject.toml
        commit_message: "ðŸ”– bump version to ${{ steps.get_version.outputs.VERSION }}"

  publish-to-pypi:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    needs: bump-version

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: main

    - name: Install UV
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Set up Python
      run: uv python install 3.12

    - name: Build package
      run: uv build

    - name: Publish to PyPI
      run: |
        uv publish \
          --username __token__ \
          --password ${{ secrets.PYPI_TOKEN }}
