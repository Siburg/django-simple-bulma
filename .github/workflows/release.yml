name: Release to PyPI

on:
  release:
    types: [published]

jobs:
  check-submodules:
    name: Check submodules
    uses: ./.github/workflows/check-submodules.yml

  publish-to-pypi:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    needs: check-submodules

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install UV
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Set up Python
      run: uv python install 3.12

    - name: Get version from release tag
      id: get_version
      run: |
        # Remove 'v' prefix if present from the release tag
        VERSION=${{ github.event.release.tag_name }}
        VERSION=${VERSION#v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Release version: $VERSION"

    - name: Update version
      run: |
        # UV can set versions directly in pyproject.toml
        uv version ${{ steps.get_version.outputs.VERSION }}
        
        # Also update setup.py for backwards compatibility
        uv run --no-sync python -c "
import re
version = '${{ steps.get_version.outputs.VERSION }}'
with open('setup.py', 'r') as f:
    content = f.read()
content = re.sub(r'version=\".*?\"', f'version=\"{version}\"', content)
with open('setup.py', 'w') as f:
    f.write(content)
print(f'Updated setup.py version to {version}')
        "

    - name: Build package
      run: uv build

    - name: Publish to PyPI
      run: |
        uv publish \
          --username __token__ \
          --password ${{ secrets.PYPI_TOKEN }}
